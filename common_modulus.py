# RSA moduli and exponents
rsa_data = {
    1: 88825874675686960805899640215157557238059693391886816945598816426620297734153,
    2: 88878130074266701869935141879285054029410300233070065696027702388890790746609,
    3: 51206608630257497636663769362503467185183065571572252852079773288959330180277,
    4: 93338979700935893370618272526070890268022423913175988456267501262275132791639,
    5: 73837197807190555520017492827329448598753765591813925403934096168060580770843,
    6: 36692766165628097212259936619637316006546006853095755474509891668497031086249,
    7: 106382254073894923019609005291237611649045619039475491224421783640779493949003,
    8: 39831894852612641884585964581455159314338033499739312100151808061553857195501,
    9: 60399729441111962392483982368870907477323902598099986545912792526362422839689,
    10: 49329876254750230176361517240749569588275231076620925764465708758588855046593,
    11: 86376817007287705513788277163878609403606890333886776228694045954128628315179,
    12: 37319659076884988538073894518247993041739888919300530810415185149742983599147,
    13: 48044100625421750065476519037968377801067841712253392471881041133801024004359,
    14: 79218700908043755003290117997586969654060336052644792661517948012443570284949,
    15: 66463159440363079429661077589750271210115184916050958910528521338821669242457,
    16: 63702049390416057036572773639564070332402399086469199614522904684435185079837,
    17: 77709060054086521756241188509025716332104694354180015860661775240836800228753,
    18: 53324218207357828224077517967881629874128803336014768098242110925045132306597,
    19: 37548494976697238214148306026227842169220701828672574176030145175817253967763,
    20: 86916516432335650068690754228369026664834879956550639192891063346013872962397,
    21: 43326862425592761540033971636036667537938545432595178799085540946303033577547,
    22: 105605606171508526938223003250508036270818750573852048649880407275139923024887,
    23: 56172784511086625017651893817610406092568241259744811997118189199487283450749,
    24: 68537094922591476594495525828118928086803110074175892745374501849246624200639,
    25: 58197145893570491688826920724099568309292399840591225403162867210985707790957,
    26: 74752387359639548877196266062334608856065947153900683499642065716937396660361,
    27: 77626280300254389776862398769301832067913617028679889944645471701566568446857,
    28: 52779481155760080440398385488591063095676152567687986864816713745546023245773,
    29: 50181244545431720249530024767097990021493105164561708368198164925190420043837,
    30: 51790680479204475436490181242120572216546291426037756392025469775738953215629
}

# Check for common modulus
common_modulus = {}

for i in rsa_data:
    for j in rsa_data:
        if i < j and rsa_data[i] == rsa_data[j]:
            common_modulus[(i, j)] = rsa_data[i]

if common_modulus:
    for pair, modulus in common_modulus.items():
        print(f"Common modulus found between pair {pair}: N = {modulus}")
else:
    print("No common modulus found among the given N values.")
